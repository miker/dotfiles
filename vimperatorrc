" ==================== Settings ==================== "
loadplugins
set guioptions=B
set titlestring=Firefox
set history=10000
set incsearch
set hlsearch
set smartcase
set defsearch=yubnub
set showmode
set showtabline=2
set verbose=9
set activate=quickmark,paste
set editor="gvim -f"
set focuscontent
set followhints=1
set newtab=all
set visualbell
set complete=lbt
set wildoptions=auto
set wildmode=list:longest,full
set history=10000
"set noinsertmode
set showstatuslinks=2

" emulate vim's "after"
set runtimepath+=~/.vimperator/after,~/vimperator/after
let mapleader=","

" ==================== key mappings ==================== "
" increase j, k, h, l
nnoremap j 5j
nnoremap k 5k
nnoremap h 3h
nnoremap l 3l
nnoremap s :stop<CR>
nnoremap <leader>p :pageinfo<CR>
map <C-c>   :tabclose<CR>
map <C-t>   :tabnew<CR>
map <M-n>   :tabnext<CR>
map <M-p>   :tabprev<CR>
map <C-r>   :restart<CR>
map <A-r>   :source ~/.vimperatorrc<CR>
noremap b   :back<CR>
noremap f   :forward<CR>
" select next/previous tab
map <Right> gt
map <Left>  gT

" Show/hide toolbars
nmap <silent> <C-M> :set go+=Bm<CR>
nmap <silent> <C-m> :set go-=Bm<CR>

" Quick buffer switch with the same mapping as in vim
nmap <Leader>t :buffer!<Space>

" C-l/F7: Search highlight toggle
map <silent> <C-l> :noh<CR>

" Passthrough mode shortcut
nmap c <C-z>

"how/hide the buftabbar
"nmap <silent> <A-u> :set invbuftabs<CR>

"Session Manager
noremap <leader>sl :sessionmanager load<CR>
noremap <leader>ss :sessionmanager save<CR>

" Noscript
map <leader>nst :noscript toggletemp<CR>
map <leader>nsp :noscript popup<CR>
map <leader>ns  :noscript toggleperm<CR>

command print hardcopy

" ==================== Firefox options ==================== "
"Seems to screw up sessionmanager
"set! browser.startup.page=1
" disable accesskey
set! ui.key.generalAccessKey=0
" hide close button
set! browser.tabs.closeButtons=2
" open bookmarks in background
set! browser.tabs.loadBookmarksInBackground=true
" open tabs by javascript in background
set! browser.tabs.loadDivertedInBackground=true
set! browser.backspace_action=0
set! geo.enabled=false
set! general.warnOnAboutConfig=false
set! network.dns.disableIPv6=true
set! network.http.max-connections=48
set! network.http.max-connections-per-server=16
set! network.http.max-persistent-connections-per-server=4
set! network.http.pipelining=true
set! network.http.pipelining.maxrequests=10
set! network.http.pipelining.ssl=true
set! network.http.proxy.pipelining=true
set! network.http.request.timeout=300
set! nglayout.initialpaint.delay=0
set! ui.submenuDelay=0
set! browser.urlbar.clickSelectsAll=true
set! browser.urlbar.doubleClickSelectsAll=false
set! browser.enable_automatic_image_resizing=false
set! network.proxy.socks_remote_dns=true

" ==================== colorscheme ==================== "
colorscheme customzenburn

" force disable ime in commandline
style -name commandline-ime chrome://* #liberator-commandline-command input {ime-mode: inactive;}

" ==================== Abbreviations ==================== "

" automatic pass-through mode on certain pages (do ':h autocommands' for details)
autocmd LocationChange .* :js modes.passAllKeys = /gmail\.com/.test(buffer.URL)
autocmd LocationChange .* :js modes.passAllKeys = /google.com\.com\/reader/.test(buffer.URL)
" {{{ Custom Colors
"
" Buftab styling
"hi BufTab padding-left: 5px; padding-right: 5px;
"hi BufTabSelected background: #343434; padding-left: 5px; padding-right: 5px;

" }}}

" {{{ Readability
noremap <silent> <leader>r :js readability()<CR>
js <<EOF
readability = function()
{
    let doc = content.document;
    _readability_vars=doc.createElement('SCRIPT')
    _readability_vars.type='text/javascript'
    _readability_vars.innerHTML = "readStyle='style-apertura'; readSize='size-medium'; readMargin='margin-narrow'"
    doc.getElementsByTagName('head')[0].appendChild(_readability_vars)
    _readability_script=doc.createElement('SCRIPT')
    _readability_script.type='text/javascript'
    _readability_script.src='http://lab.arc90.com/experiments/readability/js/readability.js?x='+(Math.random())
    doc.getElementsByTagName('head')[0].appendChild(_readability_script)
    _readability_css=doc.createElement('LINK')
    _readability_css.rel='stylesheet'
    _readability_css.href='http://lab.arc90.com/experiments/readability/css/readability.css'
    _readability_css.type='text/css'
    doc.getElementsByTagName('head')[0].appendChild(_readability_css)
    _readability_print_css=doc.createElement('LINK')
    _readability_print_css.rel='stylesheet'
    _readability_print_css.href='http://lab.arc90.com/experiments/readability/css/readability-print.css'
    _readability_print_css.media='print'
    _readability_print_css.type='text/css'
    doc.getElementsByTagName('head')[0].appendChild(_readability_print_css)
}
EOF

" }}}

" {{{ Show the Feed and Bookmark buttons on the statusbar
javascript <<EOF
(function(){
    var statusPanel = document.createElement("statusbarpanel");
    statusPanel.setAttribute("id", "buttons-panel-clone");
    statusPanel.appendChild(document.getElementById("feed-button"));
    statusPanel.appendChild(document.getElementById("star-button"));
    statusPanel.firstChild.setAttribute("style", "padding: 0; max-height: 16px;");
    document.getElementById("status-bar")
            .insertBefore(statusPanel, document.getElementById("security-button"));
})();
EOF
" }}}
js <<EOF
    toggle_element = function (name) {
        document.getElementById(name).collapsed ^= 1;
    }
EOF
" and now use it in mappings (':h key-notation'):
map <silent> <F8> :js toggle_element('toolbar-menubar')<CR>
map <silent> <F9> :js toggle_element('nav-bar')<CR>


" Quickmarks
delqm!
source ~/.vimperator/qmarks

" Bookmarks
source ~/.vimperator/bookmarks

echo "[vimperator initialized]"
